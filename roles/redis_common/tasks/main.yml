---
- name: Install dependencies
  apt: pkg=tcl

- name: Retrieve redis
  command: curl -o /tmp/{{ main_name }}-{{ main_version}}.tar.gz http://download.redis.io/releases/{{ main_name }}-{{ main_version }}.tar.gz creates=/tmp/{{ main_name }}-{{ main_version }}.tar.gz

- name: Add user redis
  action: user name=redis shell=/bin/bash home=/var/lib/redis comment="redis server"

- name: Create deploy directory
  action: file path={{ deploy_base }} state=directory

- name: Extract code
  action: shell /bin/tar -xzf /tmp/{{ main_name }}-{{ main_version }}.tar.gz && touch {{ deploy_base }}/{{ main_name }}-{{ main_version }}/extracted_ok chdir={{ deploy_base }} creates={{ deploy_base }}/{{ main_name }}-{{ main_version }}/extracted_ok

- name: Change owner of redis deployment directory
  action: shell chown redis.redis -R {{ deploy_base }}/{{ main_name }}-{{ main_version }}

- name: Create symlink
  action: file path={{ deploy_base }}/{{ main_name }} src={{ deploy_base }}/{{ main_name }}-{{ main_version }} state=link

- name: Compile
  shell: cd {{ deploy_base }}/{{ main_name }} && make && touch install_ok creates={{ deploy_base }}/{{ main_name }}/installed_ok

- name: Copy command scripts to /usr/bin
  shell: if [ ! -f {{ exec_dir }}/{{ item }} ];then cp {{ deploy_base }}/{{ main_name }}/src/{{ item }} {{ exec_dir }};fi
  with_items:
  - redis-server
  - redis-benchmark
  - redis-check-aof
  - redis-check-dump
  - redis-cli
  - redis-server
  - redis-sentinel
  - redis-trib.rb

- name: Create var dirs
  action: file path={{ item }} owner=redis group=redis state=directory
  with_items:
  - /var/log/redis
  - /var/run/redis

- name: Install upstart config
  template: src=redis.upstart.j2 dest=/etc/init.d/redis mode=0755

- name: Add to service
  action: shell update-rc.d redis defaults

- name: Enable service
  service: name=redis enabled=yes
  notify: Redis install
